rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin or super_admin
    function isAdmin() {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return userRole == 'admin' || userRole == 'super_admin';
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // CREATE: Any authenticated user can create their own user profile.
      allow create: if request.auth != null;

      // READ: 
      // - Admins can read any user profile.
      // - Authenticated users can read their own profile.
      allow read: if isAdmin() || isOwner(userId);

      // UPDATE:
      // - Admins can update any user profile.
      // - Authenticated users can update their own profile.
      allow update: if isAdmin() || isOwner(userId);

      // DELETE: Only admins can delete user profiles.
      allow delete: if isAdmin();
    }

    // Rules for other collections can be defined here

  }
}